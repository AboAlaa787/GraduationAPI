name: 'Users management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      with:
        name: with
        description: 'To query related data.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      orderBy:
        name: orderBy
        description: 'To sort data.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      dir:
        name: dir
        description: 'To determine the direction of the sort, default is asc.'
        required: false
        example: '[asc,desc]'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      withCount:
        name: withCount
        description: 'To query the number of records for related data.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      dir: '[asc,desc]'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VPdbc16v6e4aEhZk5gaf3D8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: rfadel@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: true
        example: chsbtnej
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: true
        example: djisvcbpyfzzhboui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      rule_id:
        name: rule_id
        description: ''
        required: true
        example: 486894328.20477
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 10 characters. Must be at least 10 characters.'
        required: false
        example: wxkbugqkkxqftmoygggaoiowkoachvslpbdqtopchthnuwidirqoesxbha
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: rfadel@example.org
      name: chsbtnej
      last_name: djisvcbpyfzzhboui
      password: accusantium
      rule_id: 486894328.20477
      phone: wxkbugqkkxqftmoygggaoiowkoachvslpbdqtopchthnuwidirqoesxbha
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fd83h56av6ePZVack4E1bDg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the User.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters:
      with:
        name: with
        description: 'To query related data.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 618ZDVgeacbaPE3f4kvd56h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the User.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: lmante@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: false
        example: oojsogfotvqb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: false
        example: mvgmcychxxfbylkxnsstxrwalrntdjqtvmv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      rule_id:
        name: rule_id
        description: ''
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 10 characters. Must be at least 10 characters.'
        required: false
        example: wpgsjrepsltnitxcejszraqksfxuxwhapdjmshvedpma
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: lmante@example.org
      name: oojsogfotvqb
      last_name: mvgmcychxxfbylkxnsstxrwalrntdjqtvmv
      rule_id: 12
      phone: wpgsjrepsltnitxcejszraqksfxuxwhapdjmshvedpma
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E84hk1e6d36vaabcfZV5PDg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the User.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cVvfD6b8ge31ZP6dEkh4a5a'
    controller: null
    method: null
    route: null
    custom: []
