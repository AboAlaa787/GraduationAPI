## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Users management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      with:
        name: with
        description: 'To query related data.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      orderBy:
        name: orderBy
        description: 'To sort data.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      dir:
        name: dir
        description: 'To determine the direction of the sort, default is asc.'
        required: false
        example: '[asc,desc]'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      dir: '[asc,desc]'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dbVek46hP56a1Efa8cDv3Zg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: alberto86@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: true
        example: efamduocinrejulclrbhyceqpzua
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: true
        example: tghihwponjvcmzfddtdvvhhmnmxorh
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      rule_id:
        name: rule_id
        description: ''
        required: true
        example: 73582.746119
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 10 characters. Must be at least 10 characters.'
        required: false
        example: cdcivxwmuwreqboyrneswoaealfngnxcerwhzmdspjcgnobeodyqibqxjkpbuxnhriyst
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: alberto86@example.net
      name: efamduocinrejulclrbhyceqpzua
      last_name: tghihwponjvcmzfddtdvvhhmnmxorh
      password: consectetur
      rule_id: 73582.746119
      phone: cdcivxwmuwreqboyrneswoaealfngnxcerwhzmdspjcgnobeodyqibqxjkpbuxnhriyst
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8453fck6vgaV61DhdPeEaZb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the User.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters:
      with:
        name: with
        description: 'To query related data.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vcdP8Dkb5h3e6g14fE6VZaa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the User.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: schiller.citlalli@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: false
        example: ukqlrsozuwjbtmqlcmleceylmbayfddpgrmnsotjtqfvjdyxxmoferdlmnpswiamvkwr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: 'Must contain only letters. Must not be greater than 20 characters. Must be at least 2 characters.'
        required: false
        example: ygqfmpnhqemwsjfqjueiiifukrczfmcvluihapdjbwxfhxpfpctcwcfzgiekikiwuwulgdgoaiuyaxsskfnbvkud
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      rule_id:
        name: rule_id
        description: ''
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 10 characters. Must be at least 10 characters.'
        required: false
        example: lkeiwadscyvrcgnhctodmnkxnxnsxelkrqed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: schiller.citlalli@example.net
      name: ukqlrsozuwjbtmqlcmleceylmbayfddpgrmnsotjtqfvjdyxxmoferdlmnpswiamvkwr
      last_name: ygqfmpnhqemwsjfqjueiiifukrczfmcvluihapdjbwxfhxpfpctcwcfzgiekikiwuwulgdgoaiuyaxsskfnbvkud
      rule_id: 13
      phone: lkeiwadscyvrcgnhctodmnkxnxnsxelkrqed
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hc6ab5Z3V1vfg8deaD6PEk4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'Users management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the User.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DgdP31a8cv45aZkfVE6beh6'
    controller: null
    method: null
    route: null
    custom: []
